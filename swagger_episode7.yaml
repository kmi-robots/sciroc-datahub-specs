openapi: 3.0.0
info:
  description: DataHub SciRoc Competition Interface - Episode 7
  version: 0.1.0
  title: DataHub SciRoc Competition Interface - Episode 7
  termsOfService: http://datahub.mksmart.org
  contact:
    email: datahub-support@mksmart.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: Episode7
    description: "Episode 7: Goodies box collector"
    externalDocs:
      description: Find out more
      url: http://datahub.mksmart.org
paths:
  /{teamid}/sciroc-robot-status:
    get:
      tags:
        - Episode7
      summary: Get a list of robot status
      parameters:
        - name: query
          in: query
          description: Query
          required: false
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RobotStatus"
        "400":
          description: "Invalid input"
        "500":
          description: Internal error
  /{teamid}/sciroc-robot-status/{id}:
    get:
      tags:
        - Episode7
      summary: Gets an individual robot status
      parameters:
        - name: id
          in: path
          description: Robot status ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RobotStatus"
        "400":
          description: Invalid input
        "404":
          description: Not found
        "500":
          description: Internal error
    put:
      tags:
        - Episode7
      summary: Adds a status info
      operationId: createReplaceStatus
      parameters:
        - name: id
          in: path
          description: RobotStatus ID to be retrieved (e.g. teamId-robotId-timestamp)
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RobotStatus"
        description: Status object that needs to be created
        required: true
      responses:
        "204":
          description: Status replaced
        "201":
          description: Status created
        "405":
          description: Invalid input
        "500":
          description: Internal error
    post:
      tags:
        - Episode7
      summary: Adds a status info
      operationId: updateStatus
      parameters:
        - name: id
          in: path
          description: RobotStatus ID to be updated (e.g. teamId-robotId-timestamp)
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RobotStatus"
        description: Status object that needs to be added
        required: true
      responses:
        "204":
          description: Status updated
        "400":
          description: Bad request
        "404":
          description: Not found
        "500":
          description: Internal error
  /{teamid}/sciroc-robot-location:
    get:
      tags:
        - Episode7
      summary: Get robot locations
      parameters:
        - name: query
          in: query
          description: Query
          required: false
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RobotLocation"
        "400":
          description: "Invalid input"
        "500":
          description: Internal error   
  /{teamid}/sciroc-robot-location/{id}:
    get:
      tags:
        - Episode7
      summary: Gets an individual robot location
      parameters:
        - name: id
          in: path
          description: Robot location ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RobotLocation"
        "400":
          description: Invalid input
        "404":
          description: Not found
        "500":
          description: Internal error
    put:
      tags:
        - Episode7
      summary: Set robot location
      operationId: setRobotLocation
      parameters:
        - name: id
          in: path
          description: Robot location ID to be retrieved
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RobotLocation"
        description: Robot Location object that needs to be created/replaced
        required: true
      responses:
        "204":
          description: Robot Location replaced
        "201":
          description: Robot Location created
        "400":
          description: Invalid input
        "500":
          description: Internal error
    post:
      tags:
        - Episode7
      summary: Set robot location
      operationId: updateRobotLocation
      parameters:
        - name: id
          in: path
          description: Robot location ID to be retrieved
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RobotLocation"
        description: Robot Location object that needs to be added
        required: true
      responses:
        "204":
          description: Robot Location updated
        "400":
          description: Invalid input
        "500":
          description: Internal error          
  /{teamid}/sciroc-episode7-inventory-item:
    get:
      tags:
        - Episode7
      summary: List of inventory items
      parameters:
        - name: query
          in: query
          description: Query
          required: false
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InventoryItem"
        "400":
          description: "Invalid input"
        "500":
          description: Internal error
  /{teamid}/sciroc-episode7-inventory-item/{id}:
    get:
      tags:
        - Episode7
      summary: Gets a shop info
      operationId: getInventoryItem
      parameters:
        - name: id
          in: path
          description: InventoryItem ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryItem"
        "400":
          description: Bad request
        "500":
          description: Internal error
    put:
      tags:
        - Episode7
      summary: Set shop
      operationId: setInventoryItem
      parameters:
        - name: id
          in: path
          description: Inventory Item ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryItem"
        description: InventoryItem that needs to be created or replaced
        required: true
      responses:
        "201":
          description: InventoryItem created
        "204":
          description: InventoryItem replaced
        "400":
          description: Invalid input
        "500":
          description: Internal error
    post:
      tags:
        - Episode7
      summary: Set shop
      operationId: updateInventoryItem
      parameters:
        - name: id
          in: path
          description: Inventory Item ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryItem"
        description: InventoryItem that needs to be updated
        required: true
      responses:
        "204":
          description: InventoryItem updated
        "400":
          description: Invalid input
        "404":
          description: Not found
        "500":
          description: Internal error
  /{teamid}/sciroc-episode7-inventory-order:
    get:
      tags:
        - Episode7
      summary: List of inventory orders
      parameters:
        - name: query
          in: query
          description: Query
          required: false
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InventoryOrder"
        "400":
          description: "Invalid query"
        "500":
          description: Internal error
  /{teamid}/sciroc-episode7-inventory-order/{id}:
    get:
      tags:
        - Episode7
      summary: Gets order info
      operationId: getInventoryOrder
      parameters:
        - name: id
          in: path
          description: InventoryOrder ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryOrder"
        "404": 
          description: Not found
        "500":
          description: Internal error
    put:
      tags:
        - Episode7
      summary: Set inventory order
      operationId: setInventoryOrder
      parameters:
        - name: id
          in: path
          description: Inventory Order ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryOrder"
        description: InventoryOrder that needs to be added or replaced
        required: true
      responses:
        "201":
          description: InventoryOrder created
        "204":
          description: InventoryOrder replaced
        "400":
          description: Invalid input
        "500":
          description: Internal error
    post:
      tags:
        - Episode7
      summary: Set inventory order
      operationId: updateInventoryOrder
      parameters:
        - name: id
          in: path
          description: Inventory Order ID
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryOrder"
        description: InventoryOrder that needs to be updated
        required: true
      responses:
        "204":
          description: InventoryOrder updated
        "400":
          description: Invalid input
        "404":
          description: Not found
        "500":
          description: Internal error
externalDocs:
  description: Find out more about the SciRoc competition
  url: http://sciroc.org/datahub
servers:
  - url: https://api.pp.mksmart.org/sciroc-competition/
security:
  - scirocAuth: []
components:
  securitySchemes:
    scirocAuth:     
      type: http
      scheme: basic
  schemas:
    RobotStatus:
      type: object
      required:
        - "@id"
        - "@type"
        - message
        - team
        - episode
        - timestamp
        - x
        - y
        - z
      properties:
        "@id":
          type: string
        "@type":
          type: string
          enum:
            - RobotStatus
        message:
          type: string
          maxLength: 30
        episode:
          type: string
          enum:
          - EPISODE3
          - EPISODE4
          - EPISODE7
          - EPISODE10
          - EPISODE12
        team:
          type: string
        timestamp:
          type: string
          format: date-time
        x:
          type: number
        y:
          type: number
        z:
          type: number
    RobotLocation:
      type: object
      required:
        - "@id"
        - "@type"
        - team
        - episode
        - timestamp
        - location
      properties:
        "@id":
          type: string
        "@type":
          type: string
          enum:
            - RobotLocation
        episode:
          type: string
          enum:
          - EPISODE3
          - EPISODE4
          - EPISODE7
          - EPISODE10
          - EPISODE12
        team:
          type: string
        timestamp:
          type: string
          format: date-time
        x:
          type: number
        y:
          type: number
        z:
          type: number
    InventoryItem:
      type: object
      required:
      - "@id"
      - "@type"
      - label
      - description
      - shelf
      - slot
      - quantity
      - timestamp
      properties:
        "@id":
          type: string
        "@type":
          type: string
          enum:
          - InventoryItem
        label:
          type: string
        description:
          type: string
        shelf:
          type: string
        slot:
          type: string
        quantity:
          type: number
        timestamp:
          type: string
          format: date-time
    InventoryOrder:
      type: object
      required:
      - "@id"
      - "@type"
      - items
      - timestamp
      - status
      properties:
        "@id":
          type: string
        "@type":
          type: string
          enum:
          - InventoryOrder
        timestamp:
          type: string
          format: date-time
        items:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/InventoryItemOrder"
        status:
          type: string
          enum:
            - Pending
            - Complete
    InventoryItemOrder:
      type: object
      required:
      - inventory-item-id
      - quantity
      properties:
        inventory-item-id:
          type: string
        quantity:
          type: number
