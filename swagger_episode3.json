{
  "openapi": "3.0.0",
  "info": {
    "description": "DataHub SciRoc Competition Interface - Episode 3",
    "version": "0.1.0",
    "title": "DataHub SciRoc Competition Interface - Episode 3",
    "termsOfService": "http://datahub.mksmart.org",
    "contact": {
      "email": "datahub-support@mksmart.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Episode3",
      "description": "Episode 3: Coffee shop delivery",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://datahub.mksmart.org"
      }
    }
  ],
  "paths": {
    "/{teamid}/sciroc-robot-status": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Get a list of robot status",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RobotStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/{teamid}/sciroc-robot-status/{id}": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Gets an individual robot status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Robot status ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RobotStatus"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Episode3"
        ],
        "summary": "Adds a status info",
        "operationId": "createReplaceStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RobotStatus ID to be retrieved (e.g. teamId-robotId-timestamp)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotStatus"
              }
            }
          },
          "description": "Status object that needs to be created",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Status created"
          },
          "204": {
            "description": "Status replaced"
          },
          "405": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "tags": [
          "Episode3"
        ],
        "summary": "Adds a status info",
        "operationId": "updateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RobotStatus ID to be updated (e.g. teamId-robotId-timestamp)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotStatus"
              }
            }
          },
          "description": "Status object that needs to be added",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Status updated"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/{teamid}/sciroc-robot-location": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Get robot locations",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RobotLocation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/{teamid}/sciroc-robot-location/{id}": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Gets an individual robot location",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Robot location ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RobotLocation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Episode3"
        ],
        "summary": "Set robot location",
        "operationId": "setRobotLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Robot location ID to be retrieved",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotLocation"
              }
            }
          },
          "description": "Robot Location object that needs to be created/replaced",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Robot Location created"
          },
          "204": {
            "description": "Robot Location replaced"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "tags": [
          "Episode3"
        ],
        "summary": "Set robot location",
        "operationId": "updateRobotLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Robot location ID to be retrieved",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotLocation"
              }
            }
          },
          "description": "Robot Location object that needs to be added",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Robot Location updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/master/sciroc-episode3-menu": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Coffee Shop Menu",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Menu"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/master/sciroc-episode3-menu/{id}": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Gets a menu",
        "operationId": "getMenu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Menu ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/{teamid}/sciroc-episode3-table": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Coffee Shop Table",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Table"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/{teamid}/sciroc-episode3-table/{id}": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Gets a table",
        "operationId": "getTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Episode3"
        ],
        "summary": "Set table",
        "operationId": "setTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Table"
              }
            }
          },
          "description": "Table that needs to be created or replaced",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Table created"
          },
          "204": {
            "description": "Table updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "tags": [
          "Episode3"
        ],
        "summary": "Set table",
        "operationId": "updateTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Table"
              }
            }
          },
          "description": "Table that needs to be updated",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Table updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "delete": {
        "tags": [
          "Episode3"
        ],
        "summary": "Table",
        "operationId": "deleteTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Table deleted"
          },
          "405": {
            "description": "Invalid input: Table ID does not exists"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/{teamid}/sciroc-episode3-order": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Coffee Shop Order",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/{teamid}/sciroc-episode3-order/{id}": {
      "get": {
        "tags": [
          "Episode3"
        ],
        "summary": "Gets a order",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Episode3"
        ],
        "summary": "Set order",
        "operationId": "setOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "description": "Order that needs to be created or replaced",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Menu created"
          },
          "204": {
            "description": "Menu replaced"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "tags": [
          "Episode3"
        ],
        "summary": "Set order",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "description": "Order that needs to be updated",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Menu updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "delete": {
        "tags": [
          "Episode3"
        ],
        "summary": "Order",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamid",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Invalid input: Order ID does not exists"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about the SciRoc competition",
    "url": "http://sciroc.org/datahub"
  },
  "servers": [
    {
      "url": "https://api.pp.mksmart.org/sciroc-competition/"
    }
  ],
  "security": [
    {
      "scirocAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "scirocAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "RobotStatus": {
        "type": "object",
        "required": [
          "@id",
          "@type",
          "message",
          "team",
          "episode",
          "timestamp",
          "x",
          "y",
          "z"
        ],
        "properties": {
          "@id": {
            "type": "string"
          },
          "@type": {
            "type": "string",
            "enum": [
              "RobotStatus"
            ]
          },
          "message": {
            "type": "string",
            "maxLength": 30
          },
          "episode": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "x": {
            "type": "number"
          },
          "y": {
            "type": "number"
          },
          "z": {
            "type": "number"
          }
        }
      },
      "RobotLocation": {
        "type": "object",
        "required": [
          "@id",
          "@type",
          "team",
          "episode",
          "timestamp",
          "location"
        ],
        "properties": {
          "@id": {
            "type": "string"
          },
          "@type": {
            "type": "string",
            "enum": [
              "RobotLocation"
            ]
          },
          "episode": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "x": {
            "type": "number"
          },
          "y": {
            "type": "number"
          },
          "z": {
            "type": "number"
          }
        }
      },
      "Menu": {
        "type": "object",
        "required": [
          "@id",
          "@type"
        ],
        "properties": {
          "@id": {
            "type": "string"
          },
          "@type": {
            "type": "string",
            "enum": [
              "Menu"
            ]
          },
          "products": {
            "type": "array",
            "minItems": 2,
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "Table": {
        "type": "object",
        "required": [
          "@id",
          "@type",
          "customers",
          "status"
        ],
        "properties": {
          "@id": {
            "type": "string"
          },
          "@type": {
            "type": "string",
            "enum": [
              "Table"
            ]
          },
          "customers": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Needs serving",
              "Already served",
              "Needs cleaning",
              "Ready"
            ]
          }
        }
      },
      "Product": {
        "type": "object",
        "required": [
          "@id",
          "@type",
          "label",
          "price"
        ],
        "properties": {
          "@id": {
            "type": "string"
          },
          "@type": {
            "type": "string",
            "enum": [
              "Product"
            ]
          },
          "label": {
            "type": "string"
          },
          "descriptions": {
            "type": "string"
          },
          "price": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "required": [
          "@id",
          "@type",
          "table",
          "products",
          "status",
          "timestamp"
        ],
        "properties": {
          "@id": {
            "type": "string"
          },
          "@type": {
            "type": "string",
            "enum": [
              "Order"
            ]
          },
          "table": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "products": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Complete"
            ]
          }
        }
      }
    }
  }
}
