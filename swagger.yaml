swagger: "2.0"
info:
  description: "DataHub SciRoc Competition Interface"
  version: "1.0.0"
  title: "DataHub SciRoc Competition Interface"
  termsOfService: "http://datahub.mksmart.org"
  contact:
    email: "datahub-support@mksmart.org"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.mksmart.org"
basePath: "/sciroc-competition/"
tags:
- name: "Monitor"
  description: "Everything about the SciRoc Monitor"
  externalDocs:
    description: "Find out more"
    url: "http://datahub.mksmart.org"
- name: "Episode3"
  description: "Episode 3: Coffee shop delivery"
  externalDocs:
    description: "Find out more"
    url: "http://datahub.mksmart.org"
schemes:
- "https"
- "http"
paths:
  /sciroc-episode/list:
    get:
      tags:
      - "Monitor"
      summary: "Gets the list of episodes"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Episode"
        500:
          description: "Internal error"
  /sciroc-episode:
    get:
      tags:
      - "Monitor"
      summary: "Gets the a episode"
      produces:
        - "application/xml"
        - "application/json"
      operationId: "getEpisode"
      parameters:
      - name: "id"
        in: "query"
        description: "Episode ID to be retrieved"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Episode"
        500:
          description: "Internal error"
    post:
      tags:
      - "Monitor"
      summary: "Creates or updates an episode"
      operationId: "createUpdateEpisode"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Episode object that needs to be added/updated"
        required: true
        schema:
          $ref: "#/definitions/Episode"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Episode created"
        200:
          description: "Episode updated"
          schema:
            $ref: "#/definitions/Episode"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Monitor"
      summary: "Delete an episode"
      operationId: "deleteEpisode"
      parameters:
      - name: "id"
        in: "query"
        description: "Episode ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: episode does not exists"
        204:
          description: "Episode deleted"          
        500:
          description: "Internal error"
  /sciroc-team/list:
    get:
      tags:
      - "Monitor"
      summary: "Gets the list of teams"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Team"
        500:
          description: "Internal error"
  /sciroc-team:
    get:
      tags:
      - "Monitor"
      summary: "Gets a team"
      operationId: "getTeam"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Team ID to be retrieved"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Team"
        500:
          description: "Internal error"  
    post:
      tags:
      - "Monitor"
      summary: "Creates or updates a team"
      operationId: "createUpdateTeam"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Team object that needs to be added/updated"
        required: true
        schema:
          $ref: "#/definitions/Team"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Episode created"
        200:
          description: "Episode updated"
          schema:
            $ref: "#/definitions/Team"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Monitor"
      summary: "Delete a team"
      operationId: "deleteTeam"
      parameters:
      - name: "id"
        in: "query"
        description: "Team ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: team does not exists"
        204:
          description: "Team deleted"          
        500:
          description: "Internal error"
          
  /sciroc-event/list:
    get:
      tags:
      - "Monitor"
      summary: "Gets the schedule (list of events)"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      produces:
        - "application/xml"
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        500:
          description: "Internal error"
  /sciroc-event:
    get:
      tags:
      - "Monitor"
      summary: "Gets an event"
      operationId: "getEvent"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Event ID to be retrieved"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        500:
          description: "Internal error"  
    post:
      tags:
      - "Monitor"
      summary: "Creates or updates an event in the schedule"
      operationId: "createUpdateEvent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be added/updated in the schedule"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Event created"
        200:
          description: "Event updated"
          schema:
            $ref: "#/definitions/Event"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Monitor"
      summary: "Delete an event in the schedule"
      operationId: "deleteEvent"
      parameters:
      - name: "id"
        in: "query"
        description: "Event ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: event does not exists"
        204:
          description: "Event deleted"          
        500:
          description: "Internal error"

  /sciroc-trials/list:
    get:
      tags:
      - "Monitor"
      summary: "List of trials, optionally filtered by episode or team"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Trial"
        405:
          description: "Invalid input: episode/team does not exists"
        500:
          description: "Internal error"
  /sciroc-trial:
    get:
      tags:
      - "Monitor"
      summary: "Gets a trial"
      operationId: "getTrial"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Trial ID to be retrieved"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Trial"
        500:
          description: "Internal error"  
    post:
      tags:
      - "Monitor"
      summary: "Creates or updates a trial info"
      operationId: "createUpdateTrial"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Trial object that needs to be added/updated"
        required: true
        schema:
          $ref: "#/definitions/Trial"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Trial info created"
        200:
          description: "Trial info updated"
          schema:
            $ref: "#/definitions/Trial"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Monitor"
      summary: "Delete trial info"
      operationId: "deleteTrial"
      parameters:
      - name: "id"
        in: "query"
        description: "Trial info ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: trial info does not exists"
        204:
          description: "Trial deleted"          
        500:
          description: "Internal error"
  /sciroc-judgement/list:
    get:
      tags:
      - "Monitor"
      summary: "List of judgements, optionally filtered by episode or team"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Judgement"
        405:
          description: "Invalid input: episode/team does not exists"
        500:
          description: "Internal error"
  /sciroc-judgement:
    get:
      tags:
      - "Monitor"
      summary: "Gets a judgement"
      operationId: "getJudgement"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Judgement ID to be retrieved"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Judgement"
        500:
          description: "Internal error"  
    post:
      tags:
      - "Monitor"
      summary: "Creates or updates a judgement"
      operationId: "createUpdateJudgement"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Judgement object that needs to be added/updated"
        required: true
        schema:
          $ref: "#/definitions/Judgement"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Judgement created"
        200:
          description: "Judgement updated"
          schema:
            $ref: "#/definitions/Judgement"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Monitor"
      summary: "Delete Judgement"
      operationId: "deleteJudgement"
      parameters:
      - name: "id"
        in: "query"
        description: "Judgement ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: Judgement ID does not exists"
        204:
          description: "Judgement deleted"          
        500:
          description: "Internal error"
  /sciroc-robot-status/list:
    get:
      tags:
      - "Monitor"
      summary: "List of robots status, optionally filtered by episode or team"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RobotStatus"
        405:
          description: "Invalid input: episode/team does not exists"
        500:
          description: "Internal error"
  /sciroc-robot-status:
    get:
      tags:
      - "Monitor"
      summary: "Gets a robot status"
      operationId: "getRobotStatus"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "RobotStatus ID to be retrieved"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RobotStatus"
        500:
          description: "Internal error"
    post:
      tags:
      - "Monitor"
      summary: "Adds a status info"
      operationId: "addStatus"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Status object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/RobotStatus"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Status created"
        200:
          description: "Status updated"
          schema:
            $ref: "#/definitions/RobotStatus"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Monitor"
      summary: "Delete status info"
      operationId: "deleteRobotStatus"
      parameters:
      - name: "id"
        in: "query"
        description: "Robot status ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: Robot status ID does not exists"
        204:
          description: "Robot status deleted"          
        500:
          description: "Internal error"
  /sciroc-robot-location/list:
    get:
      tags:
      - "Monitor"
      summary: "Last reported robot locations"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RobotLocation"
        405:
          description: "Invalid input: episode/team does not exists"
        500:
          description: "Internal error"
  /sciroc-robot-location:
    get:
      tags:
      - "Monitor"
      summary: "Gets a robot location"
      operationId: "getRobotLocation"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Robot location ID to be retrieved"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RobotLocation"
        500:
          description: "Internal error"
    post:
      tags:
      - "Monitor"
      summary: "Set robot location"
      operationId: "setRobotLocation"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Robot Location object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/RobotLocation"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Robot Location created"
        200:
          description: "Robot Location updated"
          schema:
            $ref: "#/definitions/RobotLocation"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Monitor"
      summary: "Delete robot location"
      operationId: "deleteRobotLocation"
      parameters:
      - name: "id"
        in: "query"
        description: "Robot location ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: Robot location ID does not exists"
        204:
          description: "Robot location deleted"          
        500:
          description: "Internal error"

  /sciroc-episode3-menu/list:
    get:
      tags:
      - "Episode3"
      summary: "Coffee Shop Menu"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Menu"
        405:
          description: "Invalid input: menu does not exists"
        500:
          description: "Internal error"
  /sciroc-episode3-menu:
    get:
      tags:
      - "Episode3"
      summary: "Gets a menu"
      operationId: "getMenu"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Menu ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Menu"
        500:
          description: "Internal error"
    post:
      tags:
      - "Episode3"
      summary: "Set menu"
      operationId: "setMenu"
      consumes:
      - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Robot Location object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Menu"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Menu created"
        204:
          description: "Menu updated"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Episode3"
      summary: "Menu location"
      operationId: "deleteMenu"
      parameters:
      - name: "id"
        in: "query"
        description: "Menu ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: Menu ID does not exists"
        204:
          description: "Menu deleted"          
        500:
          description: "Internal error"


  /sciroc-episode3-table/list:
    get:
      tags:
      - "Episode3"
      summary: "Coffee Shop Table"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Table"
        405:
          description: "Invalid input"
        500:
          description: "Internal error"
  /sciroc-episode3-table:
    get:
      tags:
      - "Episode3"
      summary: "Gets a table"
      operationId: "getTable"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Table ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Table"
        500:
          description: "Internal error"
    post:
      tags:
      - "Episode3"
      summary: "Set table"
      operationId: "setTable"
      consumes:
      - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Table that needs to be added or updated"
        required: true
        schema:
          $ref: "#/definitions/Table"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Table created"
        204:
          description: "Table updated"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Episode3"
      summary: "Table"
      operationId: "deleteTable"
      parameters:
      - name: "id"
        in: "query"
        description: "Table ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: Table ID does not exists"
        204:
          description: "Table deleted"          
        500:
          description: "Internal error"


  /sciroc-episode3-order/list:
    get:
      tags:
      - "Episode3"
      summary: "Coffee Shop Order"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "query"
          in: "query"
          description: "Query"
          required: false
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order"
        405:
          description: "Invalid input: order does not exists"
        500:
          description: "Internal error"
  /sciroc-episode3-order:
    get:
      tags:
      - "Episode3"
      summary: "Gets a order"
      operationId: "getOrder"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Order ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        500:
          description: "Internal error"
    post:
      tags:
      - "Episode3"
      summary: "Set order"
      operationId: "setOrder"
      consumes:
      - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Order that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        405:
          description: "Invalid input"
        201:
          description: "Menu created"
        204:
          description: "Menu updated"
        500:
          description: "Internal error"
    delete:
      tags:
      - "Episode3"
      summary: "Order"
      operationId: "deleteOrder"
      parameters:
      - name: "id"
        in: "query"
        description: "Order ID to be deleted"
        required: true
        type: "string"
      responses:
        405:
          description: "Invalid input: Order ID does not exists"
        204:
          description: "Order deleted"          
        500:
          description: "Internal error"          
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Team:
    type: "object"
    required: ["@id", "@type", "label"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Team"
      label:
        type: "string"
      description:
        type: "string"
  Episode:
    type: "object"
    required: ["@id", "@type", "label", "status", "map"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Episode"
      label:
        type: "string"
      description:
        type: "string"
      map:
        type: "string"
        pattern: "^[01]+$"
      status:
        type: "string"
        default: "inactive"
        enum:
          - "inactive"
          - "active"
  Event:
    type: "object"
    required: ["@id", "@type", "label", "start-time", "end-time"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Event"
      label:
        type: "string"
      description:
        type: "string"
      location:
        type: "string"
        enum: ["location1", "location2", "location3", "location4", "location5"]
      start-time: 
        type: "string"
        format: "date-time"
      end-time:
        type: "string"
        format: "date-time"
      episode:
        type: "string"
  Trial:
    type: "object"
    required: ["@id","@type","team","episode","start-time","end-time","score"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Trial"
      team:
        type: "string"
      episode:
        type: "string"
      start-time:
        type: "string"
      end-time:
        type: "string"
      score:
        type: "number"
  Judgement:
    type: "object"
    required: ["@id","@type","team","episode","score"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Judgement"
      team:
        type: "string"
      episode:
        type: "string"
      score:
        type: "number"
  RobotStatus:
    type: "object"
    required: ["@id","@type","message", "team", "episode", "timestamp", "location", "reference"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "RobotStatus"
      message:
        type: "string"
        maxLength: 30
      episode:
        type: "string"
      team:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
      x:
        type: "number"
      y:
        type: "number"
      z:
        type: "number"
      reference:
        type: "string"
        enum: 
        - "map"
  RobotLocation:
    type: "object"
    required: ["@id","@type","team", "episode", "timestamp", "location", "reference"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "RobotLocation"
      episode:
        type: "string"
      team:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
      x:
        type: "number"
      y:
        type: "number"
      z:
        type: "number"
      reference:
        type: "string"
        enum: 
        - "map"
  Menu:
    type: "object"
    required: ["@id","@type"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Menu"
      products:
        type: "array"
        minItems: 2
        items:
          $ref: "#/definitions/Product"
  Table:
    type: "object"
    required: ["@id", "@type", "customers", "status"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Table"
      customers:
        type: "number"
      status:
        type: "string"
        enum:
        - "Needs serving"
        - "Already served"
        - "Needs cleaning"
        - "Ready"
  Product:
    type: "object"
    required: ["@id","@type","label","variants"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Product"
      label:
        type: "string"
      descriptions:
        type: "string"
      variants:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/ProductVariant"
  ProductVariant:
    type: "object"
    required: ["@id","@type","label","price"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "ProductVariant"
      label:
        type: "string"
      price:
        type: "string"
  Order:
    type: "object"
    required: ["@id","@type","table", "products", "status"]
    properties:
      "@id":
        type: "string"
      "@type":
        type: "string"
        enum: 
        - "Order"
      table:
        type: "string"
      products:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/Product"
      status:
        type: "string"
        enum:
        - "Pending"
        - "Complete"
    
externalDocs:
  description: "Find out more about the SciRoc competition"
  url: "http://sciroc.org/datahub"